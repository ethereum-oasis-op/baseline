# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

DATABASE_URL="postgresql://postgres:example@localhost:5432/postgres" # DB connection string
DID_REGISTRY="0x03d5003bf0e79c5f5223588f347eba39afbc3818" # Sepolia did registry https://sepolia.etherscan.io/address/0x03d5003bf0e79c5f5223588f347eba39afbc3818#code
DID_BPI_OPERATOR_PUBLIC_KEY="<bpi_operator_public_key>" # bpi_operator_public_key = public key of the bpi operator that represents the issuer of the JWT token
DID_BPI_OPERATOR_PRIVATE_KEY="<bpi_operator_private_key>" # bpi_operator_private_key = private key of the bpi operator that is used to sign the issued JWT token
CCSM_NETWORK="sepolia" # network used to resolve dids and connect to BPI smart contract
INFURA_PROVIDER_API_KEY="<infura_api_key>" # API key of the infura account used to connect to the network
CCSM_BPI_STATE_ANCHOR_CONTRACT_ADDRESS="<smart_contract_address>" # address of the smart contract where CAHs are stored (0x1CC96ba639d4fd7624913fde39122270a1aC5c34 for local hardhat node)
SERVICE_URL="bri-3"  # JWT token audience
BPI_NATS_SERVER_URL="localhost:4222" # URL of the local NATS server instance used by the BPI
BPI_NATS_SERVER_USER="bpi_operator"
BPI_NATS_SERVER_PASS="liftboiliftboiliftboiliftboi1"
BPI_ENCRYPTION_KEY_K_PARAM="yzkXp3vY_AZQ3YfLv9GMRTYkjUOpn9x18gPkoFvoUxQ" # Encryption key params used by the BPI for Bpi Messages encryption at rest
BPI_ENCRYPTION_KEY_KTY_PARAM="oct"
SNARKJS_CIRCUITS_PATH="zeroKnowledgeArtifacts/circuits/" # used to construct the path to the circuit artifacts for a specific workstep by following this convention:
# SNARKJS_CIRCUITS_PATH + <workstep_name_in_snake_case>/<workstep_name_in_snake_case> + suffix for the artifact. Artifact suffixes:
# Circuit proving key = 'final.zkey'
# Circuit verification key = '_verification_key.json'
# Compiled circuit = '_js/<workstep_name_in_snake_case>.wasm'
# Witness calculator = '_js/witness_calculator.js'
# Witness file = '_js/witness.txt'
VSM_CYCLE_PERIOD_IN_SECS=15 # How many seconds before each VSM cycle
VSM_CYCLE_TX_BATCH_SIZE=5 # How many transactions to execute in the single VSM  cycle
MERKLE_TREE_HASH_ALGH="sha256" # Hash algorithm used in creation of Merkle Tree