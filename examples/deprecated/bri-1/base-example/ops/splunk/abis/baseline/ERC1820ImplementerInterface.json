{
	"schemaVersion": "2.0.0",
	"contractName": "ERC1820ImplementerInterface",
	"abi": [
		{
			"constant": true,
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "interfaceHash",
					"type": "bytes32"
				},
				{
					"internalType": "address",
					"name": "addr",
					"type": "address"
				}
			],
			"name": "canImplementInterfaceForAddress",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		}
	],
	"bytecode": "0x",
	"source": "pragma solidity ^0.5.8;\n\n\ncontract ERC1820ImplementerInterface {\n    bytes32 constant ERC1820_ACCEPT_MAGIC = keccak256(abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\"));\n\n    /// @notice Indicates whether the contract implements the interface `interfaceHash` for the address `addr`.\n    /// @param interfaceHash keccak256 hash of the name of the interface\n    /// @param addr Address for which the contract will implement the interface\n    /// @return ERC1820_ACCEPT_MAGIC only if the contract implements `Ã¬nterfaceHash` for the address `addr`.\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) external view returns(bytes32);\n}\n",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.17+commit.d19bba13.js"
	}
}
