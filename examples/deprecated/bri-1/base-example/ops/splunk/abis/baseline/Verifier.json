{
	"schemaVersion": "2.0.0",
	"contractName": "Verifier",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "_erc1820",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "addr",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "bytes32",
					"name": "interfaceHash",
					"type": "bytes32"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "implementer",
					"type": "address"
				}
			],
			"name": "InterfaceImplementerSet",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "addr",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "newManager",
					"type": "address"
				}
			],
			"name": "ManagerChanged",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "previousOwner",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "OwnershipTransferred",
			"type": "event"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "_owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"internalType": "address",
					"name": "_oldManager",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_newManager",
					"type": "address"
				}
			],
			"name": "assignManager",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"internalType": "bytes32",
					"name": "interfaceHash",
					"type": "bytes32"
				},
				{
					"internalType": "address",
					"name": "addr",
					"type": "address"
				}
			],
			"name": "canImplementInterfaceForAddress",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"internalType": "address",
					"name": "_addr",
					"type": "address"
				},
				{
					"internalType": "bytes32",
					"name": "_interfaceHash",
					"type": "bytes32"
				}
			],
			"name": "getInterfaceImplementer",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "getInterfaces",
			"outputs": [
				{
					"internalType": "bytes4",
					"name": "",
					"type": "bytes4"
				}
			],
			"payable": false,
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"internalType": "address",
					"name": "_addr",
					"type": "address"
				}
			],
			"name": "getManager",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"internalType": "address",
					"name": "_contract",
					"type": "address"
				},
				{
					"internalType": "bytes4",
					"name": "_interfaceId",
					"type": "bytes4"
				}
			],
			"name": "implementsERC165Interface",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"internalType": "address",
					"name": "_contract",
					"type": "address"
				},
				{
					"internalType": "bytes4",
					"name": "_interfaceId",
					"type": "bytes4"
				}
			],
			"name": "implementsERC165InterfaceNoCache",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"internalType": "address",
					"name": "addr",
					"type": "address"
				},
				{
					"internalType": "string",
					"name": "_interfaceLabel",
					"type": "string"
				}
			],
			"name": "interfaceAddr",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"internalType": "string",
					"name": "_interfaceName",
					"type": "string"
				}
			],
			"name": "interfaceHash",
			"outputs": [
				{
					"internalType": "bytes32",
					"name": "",
					"type": "bytes32"
				}
			],
			"payable": false,
			"stateMutability": "pure",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"internalType": "address",
					"name": "_addr",
					"type": "address"
				},
				{
					"internalType": "bytes32",
					"name": "_interfaceHash",
					"type": "bytes32"
				},
				{
					"internalType": "address",
					"name": "_implementer",
					"type": "address"
				}
			],
			"name": "setInterfaceImplementer",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [],
			"name": "setInterfaces",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"internalType": "address",
					"name": "_addr",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "_newManager",
					"type": "address"
				}
			],
			"name": "setManager",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": true,
			"inputs": [
				{
					"internalType": "bytes4",
					"name": "interfaceID",
					"type": "bytes4"
				}
			],
			"name": "supportsInterface",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "view",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"internalType": "address",
					"name": "newOwner",
					"type": "address"
				}
			],
			"name": "transferOwnership",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"internalType": "address",
					"name": "_contract",
					"type": "address"
				},
				{
					"internalType": "bytes4",
					"name": "_interfaceId",
					"type": "bytes4"
				}
			],
			"name": "updateERC165Cache",
			"outputs": [],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"internalType": "uint256[]",
					"name": "_proof",
					"type": "uint256[]"
				},
				{
					"internalType": "uint256[]",
					"name": "_inputs",
					"type": "uint256[]"
				},
				{
					"internalType": "uint256[]",
					"name": "_vk",
					"type": "uint256[]"
				}
			],
			"name": "verificationCalculation",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"constant": false,
			"inputs": [
				{
					"internalType": "uint256[]",
					"name": "_proof",
					"type": "uint256[]"
				},
				{
					"internalType": "uint256[]",
					"name": "_inputs",
					"type": "uint256[]"
				},
				{
					"internalType": "uint256[]",
					"name": "_vk",
					"type": "uint256[]"
				}
			],
			"name": "verify",
			"outputs": [
				{
					"internalType": "bool",
					"name": "result",
					"type": "bool"
				}
			],
			"payable": false,
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"bytecode": "0x60806040523480156200001157600080fd5b5060405162003b5638038062003b56833981810160405260208110156200003757600080fd5b8101908080519060200190929190505050806200005a336200012460201b60201c565b620000726301ffc9a760e01b6200016760201b60201c565b620000826200027060201b60201c565b5080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620000d56200027060201b60201c565b506200011d6040518060400160405280600981526020017f4956657269666965720000000000000000000000000000000000000000000000815250306200037f60201b60201c565b506200051c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141562000204576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4552433136353a20696e76616c696420696e746572666163652069640000000081525060200191505060405180910390fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600062000282620004f360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000307576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018062003b28602e913960400191505060405180910390fd5b6001600260006387d9d02360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001905090565b6000826040516020018082805190602001908083835b60208310620003ba578051825260208201915060208101905060208303925062000395565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001209050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166329965a1d3083856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019350505050600060405180830381600087803b158015620004d557600080fd5b505af1158015620004ea573d6000803e3d6000fd5b50505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6135fc806200052c6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063976ee2a5116100ad578063ebac15f911610071578063ebac15f914610aa9578063f2fde38b14610b05578063f37f6a3414610b49578063f712f3e814610bad578063fca85eb314610c3257610121565b8063976ee2a5146106eb578063a41e7d51146108df578063aabbb8ca1461094c578063b2bdfa7b146109da578063b705676514610a2457610121565b8063449a09a4116100f4578063449a09a4146102df5780635df8122f146103b857806365ba36c11461041c57806387d9d023146104a95780638da5cb5b146106a157610121565b806301ffc9a714610126578063249cb3fa1461018b57806329965a1d146101ed5780633d5840631461025b575b600080fd5b6101716004803603602081101561013c57600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610c54565b604051808215151515815260200191505060405180910390f35b6101d7600480360360408110156101a157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cbc565b6040518082815260200191505060405180910390f35b6102596004803603606081101561020357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d0d565b005b61029d6004803603602081101561027157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061114a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610376600480360360408110156102f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561033257600080fd5b82018360208201111561034457600080fd5b8035906020019184600183028401116401000000008311171561036657600080fd5b909192939192939050505061124f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61041a600480360360408110156103ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611370565b005b6104936004803603602081101561043257600080fd5b810190808035906020019064010000000081111561044f57600080fd5b82018360208201111561046157600080fd5b8035906020019184600183028401116401000000008311171561048357600080fd5b9091929391929390505050611530565b6040518082815260200191505060405180910390f35b610687600480360360608110156104bf57600080fd5b81019080803590602001906401000000008111156104dc57600080fd5b8201836020820111156104ee57600080fd5b8035906020019184602083028401116401000000008311171561051057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561057057600080fd5b82018360208201111561058257600080fd5b803590602001918460208302840111640100000000831117156105a457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561060457600080fd5b82018360208201111561061657600080fd5b8035906020019184602083028401116401000000008311171561063857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929050505061156a565b604051808215151515815260200191505060405180910390f35b6106a9611593565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6108c96004803603606081101561070157600080fd5b810190808035906020019064010000000081111561071e57600080fd5b82018360208201111561073057600080fd5b8035906020019184602083028401116401000000008311171561075257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156107b257600080fd5b8201836020820111156107c457600080fd5b803590602001918460208302840111640100000000831117156107e657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561084657600080fd5b82018360208201111561085857600080fd5b8035906020019184602083028401116401000000008311171561087a57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506115bc565b6040518082815260200191505060405180910390f35b61094a600480360360408110156108f557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506120a6565b005b6109986004803603604081101561096257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612215565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109e2612304565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a8f60048036036040811015610a3a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050612329565b604051808215151515815260200191505060405180910390f35b610ab16123de565b60405180827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b610b4760048036036020811015610b1b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506123ed565b005b610bab60048036036040811015610b5f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061255c565b005b610c1860048036036040811015610bc357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916906020019092919050505061256a565b604051808215151515815260200191505060405180910390f35b610c3a6126e4565b604051808215151515815260200191505060405180910390f35b600060026000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600060405160200180807f455243313832305f4143434550545f4d41474943000000000000000000000000815250601401905060405160208183030381529060405280519060200120905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610d485783610d4a565b335b90503373ffffffffffffffffffffffffffffffffffffffff16610d6c8261114a565b73ffffffffffffffffffffffffffffffffffffffff1614610df5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420746865206d616e61676572000000000000000000000000000000000081525060200191505060405180910390fd5b610dfe836127e9565b15610e71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f4d757374206e6f7420626520616e20455243313635206861736800000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614158015610eda57503373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561105a5760405160200180807f455243313832305f4143434550545f4d414749430000000000000000000000008152506014019050604051602081830303815290604052805190602001208273ffffffffffffffffffffffffffffffffffffffff1663249cb3fa85846040518363ffffffff1660e01b8152600401808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b158015610fab57600080fd5b505afa158015610fbf573d6000803e3d6000fd5b505050506040513d6020811015610fd557600080fd5b810190808051906020019092919050505014611059576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f446f6573206e6f7420696d706c656d656e742074686520696e7465726661636581525060200191505060405180910390fd5b5b81600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff16838273ffffffffffffffffffffffffffffffffffffffff167f93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db15360405160405180910390a450505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156111e75781905061124a565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b919050565b6000808383604051602001808383808284378083019250505092505050604051602081830303815290604052805190602001209050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aabbb8ca86836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060206040518083038186803b15801561132b57600080fd5b505afa15801561133f573d6000803e3d6000fd5b505050506040513d602081101561135557600080fd5b81019080805190602001909291905050509150509392505050565b3373ffffffffffffffffffffffffffffffffffffffff166113908361114a565b73ffffffffffffffffffffffffffffffffffffffff1614611419576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4e6f7420746865206d616e61676572000000000000000000000000000000000081525060200191505060405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114525780611455565b60005b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a435060405160405180910390a35050565b6000828260405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120905092915050565b6000806115788585856115bc565b1415611587576001905061158c565b600090505b9392505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006115c6613319565b6115ce61334c565b604051806040016040528060008152602001600081525090506040518060400160405280876000815181106115ff57fe5b602002602001015181526020018760018151811061161957fe5b60200260200101518152508260000181905250604051806040016040528060405180604001604052808960028151811061164f57fe5b602002602001015181526020018960038151811061166957fe5b6020026020010151815250815260200160405180604001604052808960048151811061169157fe5b60200260200101518152602001896005815181106116ab57fe5b602002602001015181525081525082602001819052506040518060400160405280876006815181106116d957fe5b60200260200101518152602001876007815181106116f357fe5b60200260200101518152508260400181905250604051806040016040528060405180604001604052808760008151811061172957fe5b602002602001015181526020018760018151811061174357fe5b6020026020010151815250815260200160405180604001604052808760028151811061176b57fe5b602002602001015181526020018760038151811061178557fe5b602002602001015181525081525060076000016000820151816000019060026117af929190613366565b506020820151816002019060026117c7929190613366565b509050506040518060400160405280856004815181106117e357fe5b60200260200101518152602001856005815181106117fd57fe5b602002602001015181525060076004016000820151816000015560208201518160010155905050604051806040016040528060405180604001604052808760068151811061184757fe5b602002602001015181526020018760078151811061186157fe5b6020026020010151815250815260200160405180604001604052808760088151811061188957fe5b60200260200101518152602001876009815181106118a357fe5b602002602001015181525081525060076006016000820151816000019060026118cd929190613366565b506020820151816002019060026118e5929190613366565b50905050604051806040016040528085600a8151811061190157fe5b6020026020010151815260200185600b8151811061191b57fe5b60200260200101518152506007600a0160008201518160000155602082015181600101559050506040518060400160405280604051806040016040528087600c8151811061196557fe5b6020026020010151815260200187600d8151811061197f57fe5b60200260200101518152508152602001604051806040016040528087600e815181106119a757fe5b6020026020010151815260200187600f815181106119c157fe5b60200260200101518152508152506007600c016000820151816000019060026119eb929190613366565b50602082015181600201906002611a03929190613366565b509050506002601085510381611a1557fe5b04600760100181611a2691906133a6565b5060008090506000601090505b8551811015611ac0576040518060400160405280878381518110611a5357fe5b60200260200101518152602001876001840181518110611a6f57fe5b602002602001015181525060076010018380600101945081548110611a9057fe5b90600052602060002090600202016000820151816000015560208201518160010155905050600281019050611a33565b50600760100180549050600187510114611b25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061359c602c913960400191505060405180910390fd5b60008090505b8651811015611ba857611b9983611b9460076010016001850181548110611b4e57fe5b9060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508a8581518110611b8757fe5b6020026020010151612819565b612916565b92508080600101915050611b2b565b50611bf0826007601001600081548110611bbe57fe5b906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050612916565b9150611ed2600760040160405180604001604052908160008201548152602001600182015481525050600760060160405180604001604052908160008201600280602002604051908101604052809291908260028015611c65576020028201915b815481526020019060010190808311611c51575b5050505050815260200160028201600280602002604051908101604052809291908260028015611caa576020028201915b815481526020019060010190808311611c96575b505050505081525050846007600c0160405180604001604052908160008201600280602002604051908101604052809291908260028015611d00576020028201915b815481526020019060010190808311611cec575b5050505050815260200160028201600280602002604051908101604052809291908260028015611d45576020028201915b815481526020019060010190808311611d31575b5050505050815250508760400151600760000160405180604001604052908160008201600280602002604051908101604052809291908260028015611d9f576020028201915b815481526020019060010190808311611d8b575b5050505050815260200160028201600280602002604051908101604052809291908260028015611de4576020028201915b815481526020019060010190808311611dd0575b505050505081525050611e26611e218b60000151600760040160405180604001604052908160008201548152602001600182015481525050612916565b612a32565b611ecd8b60200151600760060160405180604001604052908160008201600280602002604051908101604052809291908260028015611e7a576020028201915b815481526020019060010190808311611e66575b5050505050815260200160028201600280602002604051908101604052809291908260028015611ebf576020028201915b815481526020019060010190808311611eab575b505050505081525050612acc565b612cca565b611ee2576001935050505061209f565b611fba83600001516007600c0160405180604001604052908160008201600280602002604051908101604052809291908260028015611f36576020028201915b815481526020019060010190808311611f22575b5050505050815260200160028201600280602002604051908101604052809291908260028015611f7b576020028201915b815481526020019060010190808311611f67575b505050505081525050611fb06007600a0160405180604001604052908160008201548152602001600182015481525050612a32565b8660200151612e2e565b611fca576002935050505061209f565b611fd2613319565b9250600760000160008082016000611fea91906133d8565b600282016000611ffa91906133d8565b505060076004016000808201600090556001820160009055505060076006016000808201600061202a91906133d8565b60028201600061203a91906133d8565b50506007600a01600080820160009055600182016000905550506007600c016000808201600061206a91906133d8565b60028201600061207a91906133d8565b50506007601001600061208d91906133e6565b61209561334c565b9150600093505050505b9392505050565b6120b08282612329565b6120bb5760006120bd565b815b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146122525783612254565b335b905061225f836127e9565b15612289576000839050612273828261256a565b61227e576000612280565b815b925050506122fe565b600360008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600061233f856301ffc9a760e01b612f2a565b809250819350505060008214806123565750600081145b15612366576000925050506123d8565b6123778563ffffffff60e01b612f2a565b8092508193505050600082148061238f575060008114155b1561239f576000925050506123d8565b6123a98585612f2a565b80925081935050506001821480156123c15750600181145b156123d1576001925050506123d8565b6000925050505b92915050565b60006387d9d02360e01b905090565b6123f5611593565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061356e602e913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156124b257600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06124db611593565b82604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a161255981612f5f565b50565b6125668282612fa2565b5050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff1661261d576126168383612329565b90506126de565b8273ffffffffffffffffffffffffffffffffffffffff16600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490505b92915050565b60006126ee611593565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612771576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e81526020018061356e602e913960400191505060405180910390fd5b6001600260006387d9d02360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001905090565b60008060001b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b8316149050919050565b61282161334c565b61282961340a565b83600001518160006003811061283b57fe5b60200201818152505083602001518160016003811061285657fe5b602002018181525050828160026003811061286d57fe5b6020020181815250506000606083608084600060076107d05a03f1905080600081146128985761289a565bfe5b508061290e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4543207363616c6172206d756c7469706c69636174696f6e206661696c65640081525060200191505060405180910390fd5b505092915050565b61291e61334c565b61292661342c565b83600001518160006004811061293857fe5b60200201818152505083602001518160016004811061295357fe5b60200201818152505082600001518160026004811061296e57fe5b60200201818152505082602001518160036004811061298957fe5b602002018181525050600060608360c084600060066107d05a03f1905080600081146129b4576129b6565bfe5b5080612a2a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f4543206164646974696f6e206661696c6564000000000000000000000000000081525060200191505060405180910390fd5b505092915050565b612a3a61334c565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015612a77575060008360200151145b15612a9b576040518060400160405280600081526020016000815250915050612ac7565b60405180604001604052808460000151815260200182856020015181612abd57fe5b0683038152509150505b919050565b612ad461344e565b73__$54f2230a0152f6d8c9c94b54b356bed0ba$__6361a931ec8460000151600160028110612aff57fe5b60200201518560000151600060028110612b1557fe5b60200201518660200151600160028110612b2b57fe5b60200201518760200151600060028110612b4157fe5b60200201518760000151600160028110612b5757fe5b60200201518860000151600060028110612b6d57fe5b60200201518960200151600160028110612b8357fe5b60200201518a60200151600060028110612b9957fe5b60200201516040518963ffffffff1660e01b8152600401808981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019850505050505050505060806040518083038186803b158015612c0357600080fd5b505af4158015612c17573d6000803e3d6000fd5b505050506040513d6080811015612c2d57600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291905050508460000151600160028110612c6d57fe5b602002018560000151600060028110612c8257fe5b602002018660200151600160028110612c9757fe5b602002018760200151600060028110612cac57fe5b60200201848152508481525084815250848152505050505092915050565b600060606004604051908082528060200260200182016040528015612d0957816020015b612cf6613474565b815260200190600190039081612cee5790505b50905060606004604051908082528060200260200182016040528015612d4957816020015b612d3661348e565b815260200190600190039081612d2e5790505b5090508a82600081518110612d5a57fe5b60200260200101819052508882600181518110612d7357fe5b60200260200101819052508682600281518110612d8c57fe5b60200260200101819052508482600381518110612da557fe5b60200260200101819052508981600081518110612dbe57fe5b60200260200101819052508781600181518110612dd757fe5b60200260200101819052508581600281518110612df057fe5b60200260200101819052508381600381518110612e0957fe5b6020026020010181905250612e1e8282613093565b9250505098975050505050505050565b600060606002604051908082528060200260200182016040528015612e6d57816020015b612e5a613474565b815260200190600190039081612e525790505b50905060606002604051908082528060200260200182016040528015612ead57816020015b612e9a61348e565b815260200190600190039081612e925790505b5090508682600081518110612ebe57fe5b60200260200101819052508482600181518110612ed757fe5b60200260200101819052508581600081518110612ef057fe5b60200260200101819052508381600181518110612f0957fe5b6020026020010181905250612f1e8282613093565b92505050949350505050565b60008060006301ffc9a760e01b905060405181815284600482015260208160248389617530fa93508051925050509250929050565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635df8122f83836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200192505050600060405180830381600087803b15801561307757600080fd5b505af115801561308b573d6000803e3d6000fd5b505050505050565b600081518351146130ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061354d6021913960400191505060405180910390fd5b600083519050600060068202905060608160405190808252806020026020018201604052801561312e5781602001602082028038833980820191505090505b50905060008090505b838110156132d45786818151811061314b57fe5b60200260200101516000015182600060068402018151811061316957fe5b60200260200101818152505086818151811061318157fe5b60200260200101516020015182600160068402018151811061319f57fe5b6020026020010181815250508581815181106131b757fe5b6020026020010151600001516000600281106131cf57fe5b60200201518260026006840201815181106131e657fe5b6020026020010181815250508581815181106131fe57fe5b60200260200101516000015160016002811061321657fe5b602002015182600360068402018151811061322d57fe5b60200260200101818152505085818151811061324557fe5b60200260200101516020015160006002811061325d57fe5b602002015182600460068402018151811061327457fe5b60200260200101818152505085818151811061328c57fe5b6020026020010151602001516001600281106132a457fe5b60200201518260056006840201815181106132bb57fe5b6020026020010181815250508080600101915050613137565b506132dd6134b4565b60006020826020860260208601600060086107d05a03f1905060008260006001811061330557fe5b602002015114159550505050505092915050565b604051806060016040528061332c613474565b815260200161333961348e565b8152602001613346613474565b81525090565b604051806040016040528060008152602001600081525090565b8260028101928215613395579160200282015b82811115613394578251825591602001919060010190613379565b5b5090506133a291906134d6565b5090565b8154818355818111156133d3576002028160020283600052602060002091820191016133d291906134fb565b5b505050565b506000815560010160009055565b508054600082556002029060005260206000209081019061340791906134fb565b50565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806040016040528061346161352a565b815260200161346e61352a565b81525090565b604051806040016040528060008152602001600081525090565b60405180604001604052806134a161352a565b81526020016134ae61352a565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6134f891905b808211156134f45760008160009055506001016134dc565b5090565b90565b61352791905b8082111561352357600080820160009055600182016000905550600201613501565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe45432070616972696e67207031206c656e67746820213d207032206c656e677468596f7520617265206e6f7420617574686f726973656420746f20696e766f6b6520746869732066756e6374696f6e4c656e677468206f6620696e707574735b5d206f7220766b2e717565727920697320696e636f727265637421a265627a7a72315820b90d8dd2f5d9701ee57168f690eea1ee227b49ce6064a214cadaa5745b730c1464736f6c63430005110032596f7520617265206e6f7420617574686f726973656420746f20696e766f6b6520746869732066756e6374696f6e",
	"sourceMap": "1755:3744:20:-;;;2229:182;8:9:-1;5:2;;;30:1;27;20:12;5:2;2229:182:20;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2229:182:20;;;;;;;;;;;;;;;;2305:8;810:20:13;819:10;810:8;;;:20;;:::i;:::-;718:40:1;385:10;737:20;;718:18;;;:40;;:::i;:::-;172:15:2;:13;;;:15;;:::i;:::-;;802:22:15;768:15;;:57;;;;;;;;;;;;;;;;;;479:353;2325:15:20;:13;;;:15;;:::i;:::-;;2350:54;;;;;;;;;;;;;;;;;;2398:4;2350:26;;;:54;;:::i;:::-;2229:182;1755:3744;;1052:73:13;1112:8;1103:6;;:17;;;;;;;;;;;;;;;;;;1052:73;:::o;1442:190:1:-;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;2417:143:20:-;2468:4;608:7:13;:5;;;:7;;:::i;:::-;594:21;;:10;:21;;;586:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2528:4:20;2484:19;:41;2504:20;;;2484:41;;;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;2549:4;2542:11;;2417:143;:::o;1219:282:15:-;1330:21;1381:15;1364:33;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1364:33:15;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1364:33:15;;;1354:44;;;;;;1330:68;;1408:15;;;;;;;;;;;:39;;;1456:4;1463:13;1478:15;1408:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1408:86:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1408:86:15;;;;1219:282;;;:::o;930:71:13:-;968:7;990:6;;;;;;;;;;;983:13;;930:71;:::o;1755:3744:20:-;;;;;;;",
	"source": "/**\nCREDITS:\n\n// For the Elliptic Curve Pairing operations and functions verify() and verifyCalculation():\n// This file is MIT Licensed.\n//\n// Copyright 2017 Christian Reitwiessner\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// More information at https://gist.github.com/chriseth/f9be9d9391efc5beb9704255a8e2989d\n\nMinor edits for Nightfall by:\nMichael Connor\nDuncan Westland\nChaitanya Konda\nHarry R\n*/\n\n/**\n@title Verifier\n@dev Example Verifier Implementation - GM17 proof verification.\n@notice Do not use this example in any production code!\n*/\n\npragma solidity ^0.5.8;\n\n//TODO: Use openzeppelin interfaces inside the timber service\nimport \"./ERC165Compatible.sol\";\nimport \"./Pairing.sol\";\nimport \"./Registrar.sol\";\nimport \"./IVerifier.sol\";\nimport \"./Ownable.sol\";\n\ncontract Verifier is Ownable, ERC165Compatible, Registrar, IVerifier {\n\n    using Pairing for *;\n\n    struct Proof_GM17 {\n        Pairing.G1Point A;\n        Pairing.G2Point B;\n        Pairing.G1Point C;\n    }\n\n    struct Verification_Key_GM17 {\n        Pairing.G2Point H;\n        Pairing.G1Point Galpha;\n        Pairing.G2Point Hbeta;\n        Pairing.G1Point Ggamma;\n        Pairing.G2Point Hgamma;\n        Pairing.G1Point[] query;\n    }\n\n    Verification_Key_GM17 vk;\n\n    constructor(address _erc1820) public Ownable() ERC165Compatible() Registrar(_erc1820) {\n        setInterfaces();\n        setInterfaceImplementation(\"IVerifier\", address(this));\n    }\n\n    function setInterfaces() public onlyOwner returns (bool) {\n        supportedInterfaces[this.verify.selector] = true;\n        return true;\n    }\n\n    function getInterfaces() external pure returns (bytes4) {\n        return this.verify.selector;\n    }\n\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) external view returns(bytes32) {\n        return ERC1820_ACCEPT_MAGIC;\n    }\n\n    function assignManager(address _oldManager, address _newManager) external {\n        assignManagement(_oldManager, _newManager);\n    }\n\n    function verify(\n        uint256[] memory _proof,\n        uint256[] memory _inputs,\n        uint256[] memory _vk\n    ) public returns (bool result) {\n        if (verificationCalculation(_proof, _inputs, _vk) == 0) {\n            result = true;\n        } else {\n            result = false;\n        }\n    }\n\n    function verificationCalculation(\n        uint256[] memory _proof,\n        uint256[] memory _inputs,\n        uint256[] memory _vk\n    ) public returns (uint) {\n\n        Proof_GM17 memory proof;\n        Pairing.G1Point memory vk_dot_inputs;\n\n        vk_dot_inputs = Pairing.G1Point(0, 0); //initialise\n\n        proof.A = Pairing.G1Point(_proof[0], _proof[1]);\n        proof.B = Pairing.G2Point([_proof[2], _proof[3]], [_proof[4], _proof[5]]);\n        proof.C = Pairing.G1Point(_proof[6], _proof[7]);\n\n        vk.H = Pairing.G2Point([_vk[0], _vk[1]], [_vk[2], _vk[3]]);\n        vk.Galpha = Pairing.G1Point(_vk[4], _vk[5]);\n        vk.Hbeta = Pairing.G2Point([_vk[6], _vk[7]], [_vk[8], _vk[9]]);\n        vk.Ggamma = Pairing.G1Point(_vk[10], _vk[11]);\n        vk.Hgamma = Pairing.G2Point([_vk[12], _vk[13]], [_vk[14], _vk[15]]);\n\n        vk.query.length = (_vk.length - 16)/2;\n        uint j = 0;\n        for (uint i = 16; i < _vk.length; i += 2) {\n            vk.query[j++] = Pairing.G1Point(_vk[i], _vk[i+1]);\n        }\n\n        require(_inputs.length + 1 == vk.query.length, \"Length of inputs[] or vk.query is incorrect!\");\n\n        for (uint i = 0; i < _inputs.length; i++)\n            vk_dot_inputs = Pairing.addition(vk_dot_inputs, Pairing.scalar_mul(vk.query[i + 1], _inputs[i]));\n\n        vk_dot_inputs = Pairing.addition(vk_dot_inputs, vk.query[0]);\n\n        /**\n         * e(A*G^{alpha}, B*H^{beta}) = e(G^{alpha}, H^{beta}) * e(G^{psi}, H^{gamma})\n         *                              * e(C, H)\n         * where psi = \\sum_{i=0}^l input_i pvk.query[i]\n         */\n        if (!Pairing.pairingProd4(vk.Galpha, vk.Hbeta, vk_dot_inputs, vk.Hgamma, proof.C, vk.H, Pairing.negate(Pairing.addition(proof.A, vk.Galpha)), Pairing.addition2(proof.B, vk.Hbeta))) {\n            return 1;\n        }\n\n        /**\n         * e(A, H^{gamma}) = e(G^{gamma}, B)\n         */\n        if (!Pairing.pairingProd2(proof.A, vk.Hgamma, Pairing.negate(vk.Ggamma), proof.B)) {\n            return 2;\n        }\n\n        delete proof;\n        delete vk.H;\n        delete vk.Galpha;\n        delete vk.Hbeta;\n        delete vk.Ggamma;\n        delete vk.Hgamma;\n        delete vk.query;\n        delete vk_dot_inputs;\n\n        return 0;\n    }\n}\n",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.5.17+commit.d19bba13.js"
	}
}
